export declare const typeDefs = "#graphql\n  type User {\n    _id: ID!\n    name: String!\n    email: String!\n    orders: [Order]\n    cart: Cart\n    reviews: [Review]\n    notifications: [Notification]\n  }\n\n  type Product {\n    _id: ID!\n    name: String!\n    description: String!\n    price: Float!\n    category: Category!\n    image_url: String\n    stock: Int!\n    reviews: [Review]\n    averageRating: Float\n  }\n\n  type Category {\n    _id: ID!\n    name: String!\n    description: String\n    products: [Product]\n  }\n\n  type Order {\n    _id: ID!\n    user: User!\n    order_date: String!\n    total: Float!\n    status: String!\n    items: [OrderItem]!\n    shipping_address: Address\n  }\n\n  type OrderItem {\n    _id: ID!\n    product: Product!\n    quantity: Int!\n    price_at_time: Float!\n  }\n\n  type Cart {\n    _id: ID!\n    user: User!\n    items: [CartItem]!\n  }\n\n  type CartItem {\n    _id: ID!\n    product: Product!\n    quantity: Int!\n  }\n\n  type Address {\n    street: String!\n    city: String!\n    state: String!\n    postal_code: String!\n    country: String!\n  }\n\n  type AuthPayload {\n    token: String!\n    user: User!\n  }\n\n  input AddressInput {\n    street: String!\n    city: String!\n    state: String!\n    postal_code: String!\n    country: String!\n  }\n\n  type Review {\n    _id: ID!\n    product: Product!\n    user: User!\n    rating: Int!\n    comment: String!\n    created_at: String!\n  }\n\n  type Notification {\n    _id: ID!\n    user: User!\n    message: String!\n    type: NotificationType!\n    is_read: Boolean!\n    created_at: String!\n  }\n\n  enum NotificationType {\n    order_status\n    product_restock\n    price_drop\n    general\n  }\n\n  type Query {\n    me: User\n    product(id: ID!): Product\n    products(category: ID, search: String, limit: Int): [Product]\n    categories: [Category]\n    cart: Cart\n    order(id: ID!): Order\n    orders: [Order]\n    productReviews(productId: ID!): [Review]\n    userReviews(userId: ID!): [Review]\n    notifications: [Notification]\n  }\n\n  input CheckoutInput {\n    shippingAddress: AddressInput!\n    paymentMethod: String!\n    cardNumber: String\n    expiryDate: String\n    cvv: String\n    nameOnCard: String\n  }\n\n  type CheckoutResult {\n    success: Boolean!\n    order: Order\n    message: String\n  }\n\n  type Mutation {\n    register(name: String!, email: String!, password: String!): AuthPayload\n    login(email: String!, password: String!): AuthPayload\n    addToCart(productId: ID!, quantity: Int!): Cart\n    updateCartItem(productId: ID!, quantity: Int!): Cart\n    removeFromCart(productId: ID!): Cart\n    createOrder(address: AddressInput!): Order\n    checkout(input: CheckoutInput!): CheckoutResult\n    updateOrderStatus(orderId: ID!, status: String!): Order\n    createReview(productId: ID!, rating: Int!, comment: String!): Review\n    updateReview(reviewId: ID!, rating: Int!, comment: String!): Review\n    deleteReview(reviewId: ID!): Boolean\n    markNotificationRead(notificationId: ID!): Notification\n    markAllNotificationsRead: [Notification]\n  }\n";
